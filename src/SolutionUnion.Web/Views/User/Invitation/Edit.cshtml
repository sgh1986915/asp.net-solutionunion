@model InvitationEdit
@{
   bool isNew = Page.IsNew ?? false;
   var newHtml = Html.HtmlHelperFor<InvitationCreateInput>((isNew) ? (InvitationCreateInput)Model : null);
}
@section head {
   @RenderPage("EditHead.cshtml")
}

@using (Html.BeginForm()) {
   
   <div style="float: right;">
      @if (ViewBag.Message != null) {
         <span id="message" class="hide-after-load">@ViewBag.Message</span>
      }
      @if (!isNew) {
         <a href="@(Request.QueryString["returnUrl"] ?? Url.Action("List"))" style=" margin-left: 10px;">&lsaquo; Back</a>         
      }
   </div>
   
   <h1>Users / Add Invitation</h1>
   
   @Html.ValidationSummary(excludePropertyErrors: true)

   @Html.HiddenFor(p => p.Role)
   <h2>
      <img src="/Content/images/icon-step-01.gif" width="21" height="21" align="absmiddle"/>
      <span>Please Select an Account Type:</span>
   </h2>
   <div style="margin: 0 0 20px 40px;">
      <input type="button" id="btnReseller" class="reseller-@(Model.Role == UserRole.Reseller ? "on" : "off")" onclick="SetRole('Reseller');" tabindex="1" />
      <span class="or-separator">Or</span>
      <input type="button" id="btnRetail" class="retail-@(Model.Role == UserRole.Retail ? "on" : "off")" onclick="SetRole('Retail');" tabindex="2" />
   </div>
   <div class="separator">
   </div>
   
   <h2 style="margin-bottom: 0">
      <img src="/Content/images/icon-step-02.gif" width="21" height="21" align="absmiddle"/>
      <span>Who is the Invite for?</span>
   </h2>
   <table class="form td2">
      <tr>
         <td>
            @Html.LabelFor(p => p.Email)
         </td>
         <td>
            @Html.LabelFor(p => p.CompanyName)
         </td>
      </tr>
      <tr>
         @if (isNew) {
            <td>
               @newHtml.EditorFor(p => p.Email, new { HtmlAttributes = new { tabindex = 3 } })
               @newHtml.ValidationMessageFor(p => p.Email)
            </td>
            <td>
               @newHtml.EditorFor(p => p.CompanyName, new { HtmlAttributes = new { tabindex = 7 } })
               @newHtml.ValidationMessageFor(p => p.CompanyName)
            </td>
         } else {
            <td>
               @Html.EditorFor(p => p.Email, new { HtmlAttributes = new { tabindex = 3 } })
               @Html.ValidationMessageFor(p => p.Email)
            </td>
            <td>
               @Html.EditorFor(p => p.CompanyName, new { HtmlAttributes = new { tabindex = 7 } })
               @Html.ValidationMessageFor(p => p.CompanyName)
            </td>
         }
      </tr>
   </table>
   <div class="separator">
   </div>
   
   <h2 style="margin-bottom: 0">
      <img src="/Content/images/icon-step-03.gif" width="21" height="21" align="absmiddle"/>
      <span>Account Details</span>
   </h2>
   <table class="form td2">
      <tr>
         <td>
            @Html.LabelFor(p => p.MinimumMonthlyFee)
         </td>
         <td>
            @Html.LabelFor(p => p.FixedBackupBilling)
         </td>
      </tr>
      <tr>
         <td>
            @Html.EditorFor(p => p.MinimumMonthlyFee, new { HtmlAttributes = new { tabindex = 10 } })
            @Html.ValidationMessageFor(p => p.MinimumMonthlyFee)
         </td>
         <td>
            @Html.EditorFor(p => p.FixedBackupBilling, new { HtmlAttributes = new { tabindex = 14 } })
            @Html.ValidationMessageFor(p => p.FixedBackupBilling)
         </td>
      </tr>
      <tr>
         <td>
            @Html.LabelFor(p => p.ProCostPerGb)
         </td>
         <td>
            @Html.LabelFor(p => p.LiteCostPerGb)
         </td>
      </tr>
      <tr>
         <td>
            @Html.EditorFor(p => p.ProCostPerGb, new { HtmlAttributes = new { tabindex = 11 } })
            <div class="hint">Leave blank for variable pricing</div>
            @Html.ValidationMessageFor(p => p.ProCostPerGb)
         </td>
         <td>
            @Html.EditorFor(p => p.LiteCostPerGb, new { HtmlAttributes = new { tabindex = 15 } })
            @Html.ValidationMessageFor(p => p.LiteCostPerGb)
         </td>
      </tr>
      <tr>
         <td>
            @Html.LabelFor(p => p.ProAccountMinimumFee)
         </td>
         <td>
            @Html.LabelFor(p => p.LiteAccountMinimumFee)
         </td>
      </tr>
      <tr>
         <td>
            @Html.EditorFor(p => p.ProAccountMinimumFee, new { HtmlAttributes = new { tabindex = 12 } })
            @Html.ValidationMessageFor(p => p.ProAccountMinimumFee)
         </td>
         <td>
            @Html.EditorFor(p => p.LiteAccountMinimumFee, new { HtmlAttributes = new { tabindex = 16 } })
            @Html.ValidationMessageFor(p => p.LiteAccountMinimumFee)
         </td>
      </tr>
      <tr>
         <td>
            @Html.LabelFor(p => p.ProVaultMinimumGb)
         </td>
         <td>
            @Html.LabelFor(p => p.LiteVaultMinimumGb)
         </td>
      </tr>
      <tr>
         <td>
            @Html.EditorFor(p => p.ProVaultMinimumGb, new { HtmlAttributes = new { tabindex = 13 } })
            @Html.ValidationMessageFor(p => p.ProVaultMinimumGb)
         </td>
         <td>
            @Html.EditorFor(p => p.LiteVaultMinimumGb, new { HtmlAttributes = new { tabindex = 17 } })
            @Html.ValidationMessageFor(p => p.LiteVaultMinimumGb)
         </td>
      </tr>
   </table>
   
   <div class="separator">
   </div>
   <h2 style="margin-bottom: 0">
      <img src="/Content/images/icon-step-04.gif" width="21" height="21" align="absmiddle"/>
      <span>Any Discounts?</span>
   </h2>
   <table class="form td3">
      <tr>
         <td>
            @Html.LabelFor(p => p.PercentageDiscount)
            <span style="margin-left: 3em">
               @Html.EditorFor(p => p.PercentageDiscountEnabled, new { HtmlAttributes = new { tabindex = 18 } })
            </span>
         </td>
      </tr>
      <tr>
         <td>
            @Html.EditorFor(p => p.PercentageDiscount, new { HtmlAttributes = new { tabindex = 19 } })
            @Html.ValidationMessageFor(p => p.PercentageDiscount)
         </td>
      </tr>
   </table>
   
   <div class="separator">
   </div>
   <div class="create-form">
      <input type="submit" id="btnSubmit" name="btnSubmit" class="@(isNew ? "create" : "update")" tabindex="33" />
      <span class="or-link">
         Or
         @if (isNew) {
            <input type="reset" value="Clear" tabindex="34" />
         } else {
            <a href="@Url.Action("List")" tabindex="34">Cancel</a>
         }
      </span>
   </div>
   <div class="clear">
   </div>
}
